---
layout: post
title: Java部署环境搭建教程
description: Java部署环境搭建教程
category: javaweb
---

# Java部署环境搭建教程
## 准备
- ubuntu系统镜像
- jdk安装包
- tomcat安装包
- nexus war包
- jenkins war包
- gradle安装包

## 安装配置ubuntu
### 安装过程自行google
### 硬件配置
- 处理器：1 X 4
- 内存： 6G
- 硬盘： 100G

### 软件配置
- sshserver（ssh登陆服务器）
安装：安装操作系统时勾选 或 使用安装命令：`sudo apt-get install ssh`
- lrzsz（向服务器上传下载文件）
安装： `sudo apt-get install lrzsz`


## 安装配置jdk
1. 创建一个目录作为JDK的安装目录，我的目录为 /usr/lib/java
`sudo mkdir /usr/lib/java`
2. 移动压缩包到/usr/lib/java目录下
`sudo mv jdk-8u91-linux-x64.tar.gz /usr/lib/java`
3. 进入目录/usr/lib/java,解压文件
```
cd /usr/lib/java
sudo tar -zxvf jdk-8u91-linux-x64.tar.gz
```
4. 配置环境变量
`sudo vim /etc/profile`
末尾加入以下配置（JAVA_HOME 后的路径就是jdk的文件位置）
``` 
export JAVA_HOME=/usr/lib/java/jdk1.8.0_91
export JRE_HOME=$JAVA_HOME/jre
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH
```
修改完成之后保存关闭，并输入以下命令使环境变量立即生效
`source /etc/profile`
5. 输入java -version，显示JDK版本（如下信息）则环境变量配置正确 
```
java version "1.8.0_91"
Java(TM) SE Runtime Environment (build 1.8.0_91-b14)
Java HotSpot(TM) 64-Bit Server VM (build 25.91-b14, mixed mode)
```

## 安装配置mysql
### 安装
`sudo apt-get install mysql-server`
### 测试是否安装成功
`sudo netstat -tap | grep mysql`
### 操作
- 登录 `mysql -uroot -p`
- 检查MySQL服务器占用端口 `netstat -nlt|grep 3306`
- 检查MySQL服务器系统进程 `ps -aux|grep mysql`
- 查看数据库的字符集编码 `show variables like '%char%';`

### 让MySQL服务器被远程访问（一般不用）
1. 打开mysql配置文件
`sudo vim /etc/mysql/my.cnf`
找到将bind-address = 127.0.0.1注掉​
`#bind-address            = 127.0.0.1`
2. 修改后，重启MySQL服务器
`sudo /etc/init.d/mysql restart`
3. 重新登录mysql -uroot -p
```
grant all privileges on *.* to 'root'@'%' identified by 'xxxxxx';
flush privileges;
```
4. 检查MySQL服务器占用端口
```
~ netstat -nlt|grep 3306
tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN
```
我们看到从之前的网络监听从 127.0.0.1:3306 变成 0 0.0.0.0:3306，表示MySQL已经允许远程登陆访问。

### 将字符编码设置为UTF-8（一般不用）
默认情况下，MySQL的字符集是latin1，因此在存储中文的时候，会出现乱码的情况，所以我们需要把字符集统一改成UTF-8。
1. 打开mysql配置文件
`sudo vim /etc/mysql/my.cnf`
在[client]下追加：
`default-character-set=utf8`
在[mysqld]下追加：
`character-set-server=utf8`
在[mysql]下追加：
`default-character-set=utf8`
2. 修改后，重启MySQL服务器,并登录
`mysql -uroot -p`
3. 再次查看字符串编码
```
mysql> show variables like '%char%';
+--------------------------+----------------------------+
| Variable_name            | Value                      |
+--------------------------+----------------------------+
| character_set_client     | utf8                       |
| character_set_connection | utf8                       |
| character_set_database   | utf8                       |
| character_set_filesystem | binary                     |
| character_set_results    | utf8                       |
| character_set_server     | utf8                       |
| character_set_system     | utf8                       |
| character_sets_dir       | /usr/share/mysql/charsets/ |
+--------------------------+----------------------------+
8 rows in set (0.00 sec)
 Linux
```

## 安装配置redis
### 下载安装
```
wget http://download.redis.io/releases/redis-3.2.8.tar.gz
tar xzf redis-3.2.8.tar.gz
cd redis-3.2.8
make
make install
```
### 设置开机自起
1. 设置自启动配置文件
 在Redis安装路径（就是上一步make的路径）之下，找到utils目录，其中有个redis_init_script文件。将其作为自启动配置文件。
 将redis_init_script文件重新命名为redisd，作为系统启动服务名,并将其移动到/etc/init.d/目录下。
2. 设置Redis配置文件
 在redis安装目录下，找到redis.conf文件,将这个文件复制到 /etc/redis 目录，并改名为“6379.conf”，然后修改此文件内容。
 - 设置daemonize为yes，使服务可以后台运行：`daemonize yes`
 - 设置log文件路径：`logfile /var/log/redis/redis-server.log`
 - 设置持久化文件存放路径：`dir /var/lib/redis`
3. 初始化文件路径
```
sudo mkdir -p /var/lib/redis 
sudo mkdir -p /var/log/redis 
sudo chown java(用户名) /var/lib/redis
sudo chown java(用户名) /var/log/redis
```
4. 执行开机自启动命令
```
sudo chmod +x /etc/init.d/redisd
sudo update-rc.d redisd defaults
```

### 操作
```
service redisd start
service redisd stop
service redisd restart
```

## 安装配置tomcat
### 解压文件并将文件移动到/usr/lib/目录下重命名为tomcat
```
unzip apache-tomcat-8.0.32.zip
sudo mv apache-tomcat-8.0.32 /usr/lib/tomcat
```
### 增加执行权限
进入tomcat下的bin目录给所有的.sh文件增加执行权限
`sudo chmod +x *.sh`
### 配置开机自起
复制catalina.sh文件作为启动文件并重命名为tomcat
`sudo cp catalina.sh tomcat`
编辑tomcat文件添加如下内容
```
sudo vim tomcat
JAVA_HOME=/usr/lib/java/jdk1.8.0_91  
CATALINA_HOME=/usr/lib/tomcat
CLASSPATH=.:${JAVA_HOME}/lib:$CATALINA_HOME/lib  
```
将tomcat移动到开机自启动目录,并执行刷新命令
```
sudo mv tomcat /etc/init.d/
cd /etc/init.d/
sudo update-rc.d tomcat defaults
```
### 配置tomcat web管理接口
进入tomcat目录下的conf目录编辑tomcat-users.xml
```
cd /usr/lib/tomcat/conf
sudo vim /tomcat-users.xml
```
添加管理员用户
```
  <role rolename="tomcat"/>
  <role rolename="admin"/>
  <role rolename="admin-gui"/>
  <role rolename="manager-gui"/>
  <role rolename="manager"/>
  <role rolename="manager-script"/>
  <role rolename="manager-gui"/>
  <role rolename="manager-jmx"/>
  <role rolename="manager-status"/>
  <user username="jiaogai" password="744352682" roles="tomcat,admin,manager,manager-gui,admin-gui,manager-script,manager-jmx"/>
```
### 操作
```
service tomcat start  
service tomcat stop  
service tomcat status  
service tomcat restart  
```

## 安装配置gradle
1. 解压文件并移动到/usr/lib/目录下重命名为gradle
```
unzip gradle-3.5.zip
sudo mv gradle-3.5 /usr/lib/gradle
```
2. 配置环境变量
`sudo vim /etc/profile`
末尾加入以下配置（JAVA_HOME 后的路径就是jdk的文件位置）
``` 
export GRADLE_HOME=/usr/lib/gradle
export CLASSPATH=.:$GRADLE_HOME/lib:$CLASSPATH
export PATH=$GRADLE_HOME/bin:$PATH
```
修改完成之后保存关闭，并输入以下命令使环境变量立即生效
`source /etc/profile`

## 安装配置jenkins
1. 将jenkins war包放入tomcat目录下的webapp目录下
`mv jenkins.war apache-tomcat-8.0.32/webapp/`

## 安装配置nexus
1. 将nexus war包放入tomcat目录下的webapp目录下
`mv nexus.war apache-tomcat-8.0.32/webapp/`

注：jenkins和nexus的配置将另出教程

转载请注明出处：[http://attackme.cn/2017/05/12/Java部署环境搭建教程/](http://attackme.cn/2017/05/12/Java部署环境搭建教程/)
